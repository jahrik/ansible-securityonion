---
- hosts: all
  become: true
  become_method: sudo
  vars_files:
    - ./vars/snort_rules.yml
  roles:
  tasks:

  - name: Add securityonion repo
    apt_repository:
      repo=ppa:securityonion/stable
      state=present
    when: ansible_distribution == 'Ubuntu'
    tags: [ "apt" ]

  - name: Install packages
    apt:
      name={{item}}
      state=present
      update_cache=yes
    with_items:
      - syslog-ng-core
      - syslog-ng
      - securityonion-elsa
      - securityonion-elsa-extras
      - securityonion-all
    when: ansible_distribution == 'Ubuntu'
    tags: [ "apt" ]

  - name: Generate sosetup.conf
    template:
      src=templates/sosetup.conf.j2
      dest=/etc/nsm/sosetup.conf
      owner=root
      group=root
      mode=0600
    tags: [ "setup" ]

  - name:
    ufw:
      rule=allow
      port=2222
    tags: [ "firewall" ]

#  - name: Run sosetup -f sosetup.conf
#    ignore_errors: true
#    shell: "echo 'yes' | sosetup -f /etc/nsm/sosetup.conf | tee /var/log/sosetup.log"
#    args:
#      chdir: /etc/nsm/
#      creates: /etc/nsm/sosetup_initial.lock
#    tags: [ "setup" ]
#
#  - name: waiting for server to come back
#    local_action: wait_for host={{ inventory_hostname }}
#      state=started
#    sudo: false

  # Run setup again

  # Post installation
  - name: Generate local.rules
    template:
      src=templates/local.rules.j2
      dest=/etc/nsm/rules/local.rules
      owner=sguil
      group=sguil
      mode=0600

